# This is a basic workflow to help you get started with Actions

name: Build and Deploy HUGO Site 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Set the hugo environment 
    env:
      HUGO_VERSION: 0.92.2

    # Steps represent a sequence of tasks that will be executed as part of the 
    # job
    steps:
      # FIGURE OUT WHY THIS STEP IS CAUSING AN ISSUE: I believe what is going 
      # on here is a version mismatch between my local dev environment and the 
      # environment running in this container. 
      #- name: Install HUGO CLI
        #run: sudo apt-get instatll -y hugo

      # Install HUGO CLI 
      - name: Install HUGO CLI
        run: |
           wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb \
           && sudo dpkg -i ${{ runner.temp }}/hugo.deb
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Build site
      - name: Build HUGO site 
        run: |
          hugo --minify -D
          ls 

      # Setup SSH keys to be added to ssh-agent 
      - name: Setup SSH Keys and Known_hosts
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.DIGI_OCE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secretes.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      #   env: 
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #     ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      #     ssh-add - <<< 
      # Run the command set to deploy this webserver
      # - name: Deploy to Digital Ocean webserver
        # env: 
        #   DO_KEY: ${{ secrets.DIGI_OCE_KEY }}
        # run: cat $DO_KEY
        # run: |
          # eval $(ssh-agent)
          # echo $SSH_AUTH_SOCK
          # ssh-add < "$DO_KEY"
        #run: sudo scp -i DO_KEY -r public bmiller@137.184.190.165:/var/www/benmiller.tech/
